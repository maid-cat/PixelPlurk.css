/* 河道排版 */
#timeline_holder {
  --timeline-height: calc(min(640px, 100vh - 42px - 70px));
  height: var(--timeline-height) !important;
}
.timeline-cnt .block_cnt {
  display: grid;
  grid-template: repeat(7, minmax(0, 1fr)) / 1fr;
  grid-auto-rows: minmax(0, 1fr);
  row-gap: 10px;
  padding-top: 6px;
  padding-bottom: calc(46px + 4px);
}
.timeline-cnt .plurk {
  top: 0 !important;
  height: auto;
  max-height: 100%;
  grid-column: 1;
}
.timeline-cnt .plurk.display {
  max-height: none;
}
:is(url({)), .timeline-cnt .plurk[style*="top: 5.5%;"], :is(url(})) {grid-row: 1 / 2;}
:is(url({)), .timeline-cnt .plurk[style*="top: 17.125%;"], :is(url(})) {grid-row: 2 / 3;}
:is(url({)), .timeline-cnt .plurk[style*="top: 28.75%;"], :is(url(})) {grid-row: 3 / 4;}
:is(url({)), .timeline-cnt .plurk[style*="top: 40.375%;"], :is(url(})) {grid-row: 4 / 5;}
:is(url({)), .timeline-cnt .plurk[style*="top: 52%;"], :is(url(})) {grid-row: 5 / 6;}
:is(url({)), .timeline-cnt .plurk[style*="top: 63.625%;"], :is(url(})) {grid-row: 6 / 7;}
:is(url({)), .timeline-cnt .plurk[style*="top: 75.25%;"], :is(url(})) {grid-row: 7 / 8;}
:is(url({)), .timeline-cnt .plurk[style*="top: 86.875%;"], :is(url(})) {grid-row: 8 / 9;}


/* 噗首排版 */
.timeline-cnt .plurk {
  display: grid;
  grid-template:
  "img qual response_count" auto
  "img content content" minmax(0, 1fr) / auto 1fr auto;
  column-gap: 4px;
}
.timeline-cnt .plurk > table,
.timeline-cnt .plurk > table > tbody,
.timeline-cnt .plurk > table > tbody > tr {
  display: contents;
}
.timeline-cnt .plurk > table > tbody > tr > .td_img {
  grid-area: img;
  z-index: 1;
  width: auto;
  margin: 2px;
  margin-right: 0;
}
.plurk_icon, .pinned_plurk_icon {
  top: -6px;
  transform: translateX(-8px);
}
.p_img {
  width: auto;
  height: auto;
  max-height: 100%;
}
.p_img a, .p_img img {
  display: block;
}
.p_img img {
  width: auto;
  height: 40px;
}
.timeline-cnt .plurk > table > tbody > tr > .td_response_count {
  grid-area: response_count;
  z-index: 1;
  width: auto;
  height: auto !important;
  min-width: auto;
}
.timeline-cnt .plurk > table > tbody > tr > td:nth-child(2) {
  display: contents;
}
.timeline-cnt .plurk_cnt {
  grid-row: 1 / -1;
  grid-column: 1 / -1;
  display: grid;
  grid-template:
  "img qual response_count" 20px
  "img content content" minmax(0, 1fr) / 44px 1fr auto;
  grid-template: subgrid / subgrid;
  padding: 0;
  column-gap: 4px;
}
.timeline-cnt .plurk_cnt > table,
.timeline-cnt .plurk_cnt > table > tbody,
.timeline-cnt .plurk_cnt > table > tbody > tr {
  display: contents;
}
.timeline-cnt .plurk_cnt .td_qual {
  grid-area: qual;
  width: auto;
  padding: 0;
  align-self: center;
}
.timeline-cnt .plurk_cnt .td_cnt {
  grid-area: content;
  padding: 0;
  display: grid;
  grid-template: 1fr auto / 1fr;
}
.timeline-cnt .plurk .text_holder {
  min-width: 100%;
  width: 240px;
  padding: 0;
  min-height: 0;
  max-height: none !important;
  height: 100%;
}
.timeline-cnt .plurk .manager {
  justify-self: end;
}

/* 細長發噗區 */
#dashboard_holder {
  padding-top: 0;
  z-index: 10;
}
#plurk-dashboard .dash-group-form {
  width: 100%;
  height: 66px;
}
#plurk-dashboard  .dash-segment-post {
  height: 100%;
}
#plurk-dashboard .dash-group-form .segment-content {
  min-height: 0;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1100;
}
#plurk-dashboard .dash-group-right {
  width: 67%;
}
#plurk-dashboard .plurkForm {
  display: grid;
  grid-template-areas: "input icons submit" "misc misc misc";
  grid-template-columns: 1fr auto auto;
  column-gap: 4px;
}
#plurk-dashboard .input_holder {
  grid-area: input;
}
.preview-list {
  border-top: var(--main-border);
}
.preview-list ul li {
  border: var(--main-border);
}
#plurk-dashboard .icons_holder {
  grid-area: icons;
  height: 43px;
  display: flex;
  align-items: center;
  gap: 4px;
  margin: 0;
}
#plurk-dashboard .icons_holder li {
  margin: 0;
}
#plurk-dashboard .icons_holder::after {
  display: none;
}
#plurk-dashboard .submit_img {
  grid-area: submit;
  margin-left: 0;
  height: 43px;
  line-height: 43px;
}
#plurk-dashboard .plurk_to, .char_updater {
  grid-area: misc;
}
#plurk-dashboard .char_updater {
  justify-self: start;
}
#plurk-dashboard .plurk_to {
  justify-self: end;
  margin-top: 0;
}
#plurk-dashboard .plurk_to > * {
  margin-top: 2px;
}
:is(url({)), .plurkForm, :is(url(})) {
  padding: 0 !important;
}

/* 像素化*/
@font-face {
  font-family: "Cubic 11";
  font-display: swap;
  src: url('https://cdn.jsdelivr.net/gh/ACh-K/Cubic-11@v1.013/fonts/web/Cubic_11_1.013_R.woff2') format('woff2'),
    url('https://cdn.jsdelivr.net/gh/ACh-K/Cubic-11@v1.013/fonts/web/Cubic_11_1.013_R.woff') format('woff'),
    url('https://cdn.jsdelivr.net/gh/ACh-K/Cubic-11@v1.013/fonts/ttf/Cubic_11_1.013_R.ttf') format('truetype');
}
@font-face {
  font-family: "PlurkIconFont";
  src: url('https://cdn.jsdelivr.net/gh/maid-cat/PixelPlurk.css/fonts/PlurkIconFont.woff2') format('woff2'),
    url('https://cdn.jsdelivr.net/gh/maid-cat/PixelPlurk.css/fonts/PlurkIconFont.woff') format('woff'),
    url('https://cdn.jsdelivr.net/gh/maid-cat/PixelPlurk.css/fonts/PlurkIconFont.ttf') format('ttf');
  font-weight: normal;
  font-style: normal;
}

:is(url({)), body, #top_bar, button, :is(url(})),
._lch_ h2,
.karma_hover,
.unread_generic {
  font-family: "Cubic 11", 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans Regular', Tahoma, Verdana, sans-serif;
}
:is(url({)), [class^="pif-"]:not(.icon_only)::before, [class*=" pif-"]:not(.icon_only)::before, :is(url(})) {
  vertical-align: -15%;
}

.timeline-cnt .plurk_cnt {
  border: var(--main-border);
  border-image: var(--main-rounded-border);
  box-shadow: none;
}
.timeline-cnt .plurk.plurk_box .plurk_cnt {
  border-bottom: none;
}
.plurk_icon:not(.bday), .pinned_plurk_icon {
  border-radius: 0;
  clip-path: var(--round-rect-2px);
  outline: var(--main-border);
  outline-offset: var(--neg-main-border-width);
}
.plurk_icon:not(.bday) {
  background-color: currentcolor;
}
.plurk_icon img {
  image-rendering: pixelated;
}
.plurk_icon.coin img {
  width: 18px;
  height: 18px;
  margin-left: -1px;
  margin-top: -1px;
}
.plurk.porn .porn-icon {
  vertical-align: middle;
}
.plurk.porn .porn-icon::before {
  position: unset;
  line-height: 1;
  top: unset;
  background: radial-gradient(transparent 8px, currentColor 8px);
  padding: 0 1.5px;
  clip-path: var(--round-rect-2px);
  outline: var(--main-border);
  outline-offset: var(--neg-main-border-width);
}
.p_img {
  border: var(--main-border);
  clip-path: var(--round-rect-2px);
}
.response_count {
  padding-top: 0;
  padding-right: 2px;
  background-color: transparent;
  color: #ddd;
}
.new .response_count {
  background-color: transparent;
  color: #fb0047;
}
.plurk.porn-lock .need-login, .plurk.porn-lock .need-check {
  border-radius: 0;
  clip-path: var(--round-rect-2px);
}
.timeline_control a, .bottom_start {
  border-radius: 0;
  clip-path: var(--round-rect-2px);
}
.unread_generic {
  background: none;
  color: inherit !important;
  font-weight: bold;
  padding: 0;
}
:is(url({)), .qualifier, :is(url(})) {
  padding: .5px 3px;
  border-radius: 0;
  clip-path: var(--round-rect-2px);
  font-size: calc(1em - 1px);
}

:is(url({)), .plurk a.meta, .plurk a.meta:hover, :is(url(})) {
  border-radius: 0;
  padding: 0;
  border-width: var(--main-border-width);
  clip-path: var(--round-rect-2px);
}
:is(url({)), .plurk a.ogvideo::after, .plurk a.videoservices::after, :is(url(})) {
  left: 4px;
  top: 3px;
  image-rendering: pixelated;
}
:is(url({)), .plurk a.meta img, :is(url(})) {
  border-radius: 0;
}
:is(url({)), .plurk a.pictureservices, :is(url(})) {
  border-radius: 0;
  clip-path: var(--round-rect-2px);
}
.plurk-poll {
  border-radius: 0;
  border: var(--main-border);
  border-image: var(--main-rounded-border);
  margin: calc(0.5em + 2px) 4px;
}
.poll-candidate, .checkbox--label {
  border-radius: 0;
  border-width: var(--main-border-width);
  clip-path: var(--round-rect-2px);
}
.checkbox.radio .checkbox--background {
  border-radius: 0;
  box-shadow: var(--main-border-box-shadow);
}
.checkbox .checkmark.checkmark-radio {
  border-radius: 0;
}

#form_holder {
  box-shadow: none;
  border: var(--main-border);
  border-image: var(--main-rounded-border);
  border-top: none;
}
:is(url({)), .response_box, .plurk_box .mini_form, :is(url(})) {
  border-top: var(--main-border) !important;
}
:is(url({)), .plurk_box .mini_form .icons_holder, :is(url(})) {
  margin: 0;
}
.response-manager {
  border-width: var(--main-border-width);
  border-bottom: none;
}

.p_img img, .friend_holder img {
  image-rendering: pixelated;
}
.friend_holder img {
  width: 20px;
  height: 20px;
}

:is(url({)), .input_holder, :is(url(})) {
  border-radius: 0 !important;
  border: var(--main-border) !important;
  clip-path: var(--round-rect-2px) !important;
}
:is(url({)), .qual_holder, :is(url(})) {
  padding: 0 !important;
  margin-right: 4px !important;
}
:is(url({)), .m_qualifier, :is(url(})) {
  padding: 7px 10px 8px !important;
  border-radius: 0 !important;
  box-shadow: var(--main-border-box-shadow) !important;
}
:is(url({)), .plurkForm.mini-mode .m_qualifier, .mini_form .m_qualifier, :is(url(})) {
  padding: 4px 6px 3px !important;
}
.submit_img {
  border-radius: 0;
  border: var(--main-border);
  clip-path: var(--round-rect-2px);
  box-shadow: inset -2px -2px rgba(0, 0, 0, 0.2);
}
.submit_img:hover {
  box-shadow: inset -3px -3px rgba(0, 0, 0, 0.2);
}

#plurk-dashboard h2 {
  font-size: 16px;
  transform: scaleX(1.2);
  transform-origin: top left;
  letter-spacing: 8px;
  color: black;
}
:not(.dash-segment-award) > .segment-content {
  padding: 2px;
  border-radius: 0;
  margin: 2px;
  margin-top: 12px;
  border: var(--main-border);
  border-image: var(--main-rounded-border);
}
#full_name {
  display: flex;
  flex-flow: column nowrap;
}

.profile-pic {
  border-radius: 0 !important;
  box-shadow: var(--main-border-box-shadow) !important;
  width: 80px !important;
  height: 80px !important;
  left: 3px;
  top: 3px;
}
.segment-content:hover .profile-pic {
  filter: none;
}
#premium-icon {
  filter: var(--pixelate-filter-2px);
}
.profile-info {
  display: none;
}


:is(url({)), .friend_man, :is(url(})) {
  border-radius: 0;
  border: var(--main-border);
  padding: 4px 8px;
  box-shadow: inset -2px -2px rgba(0, 0, 0, 0.2);
  clip-path: var(--round-rect-2px);
}
:is(url({)), .friend_man:hover, :is(url(})) {
  box-shadow: inset -3px -3px rgba(0, 0, 0, 0.2);
}

:is(url({)), .pop-view, :is(url(})) {
  border-radius: 0;
  border: var(--main-border);
  border-image: var(--main-rounded-border);
}
:is(url({)), .pop-view-content, :is(url(})) {
  padding: 2px;
}
:is(url({)), .pop-tooltip .pop-view-content, :is(url(})) {
  padding: 2px 4px;
}
:is(url({)), .search-bar-complete, .search-bar-complete .pop-view-content, .user-complete-list .pop-view-content, .user-complete-list .pop-view-content ul, :is(url(})) {
  border-radius: 0 !important;
}
:is(url({)), .friend-editor-popview .friend_man, .request-editor-popview .friend_man, .respond-editor-popview .friend_man, .follow-editor-popview .friend_man, :is(url(})) {
  padding: 10px 12px;
  box-shadow: none;
  clip-path: none;
  border: none;
}
:is(url({)), .friends-select-list li, :is(url(})) {
  border-bottom: none;
}
:is(url({)), .friends-select-list li .avatar, :is(url(})) {
  border-radius: 0 !important;
  --box-shadow: var(--main-border-box-shadow);
  border: var(--main-border);
  clip-path: var(--round-rect-2px);
}


:is(url({)), .pop-view-content .header, #noti-list .header, :is(url(})) {
  border-bottom: var(--main-border);
}
:is(url({)), #noti-list .header .noti-alert-switch, :is(url(})) {
  border-radius: 0;
  outline: var(--main-border);
  outline-offset: var(--neg-main-border-width);
  clip-path: var(--round-rect-2px);
}
:is(url({)), #noti-list .header .noti-alert-switch .pusher, :is(url(})) {
  box-shadow: var(--main-border-box-shadow), inset -2px -2px rgba(0, 0, 0, 0.2);
  border-radius: 0;
}
:is(url({)), #noti-list li, :is(url(})) {
  border-bottom: none;
}
:is(url({)), #noti-list li .avatar, :is(url(})) {
  display: flex;
  justify-content: center;
  align-items: center;
}
:is(url({)), #noti-list li .avatar img, :is(url(})) {
  width: 39px;
  height: 39px;
  image-rendering: pixelated;
  border-radius: 0;
  border: var(--main-border);
  clip-path: var(--round-rect-2px);
}
:is(url({)), #emoticon-tabs, :is(url(})) {
  box-shadow: none;
  border-top: var(--main-border);
}
:is(url({)),  .info_menu .profile_pic, :is(url(})) {
  border-radius: 0;
  box-shadow: var(--main-border-box-shadow);
  image-rendering: pixelated;
}
:is(url({)),  .info_menu .menu, :is(url(})) {
  border-top: var(--main-border);
}
:is(url({)),  .info_menu .menu li, :is(url(})) {
  margin: 0;
}
:is(url({)),  .info_menu .menu li:hover, :is(url(})) {
  border-radius: 0;
}
:is(url({)), .pop-menu li a:not(.no-hover):hover, :is(url(})) {
  border-radius: 0 !important;
  background-color: white !important;
  filter: invert();
}
:is(url({)), .pop-menu li.sep, :is(url(})) {
  background: var(--main-border-color) !important;
  height: var(--main-border-width) !important;
  margin: 4px 0 !important;
}

:is(url({)), .pop-view-arrow::after, :is(url(})) {
  width: 6px;
  height: 6px;
  transform: none;
  border: var(--main-border);
  border-image: var(--main-rounded-border);
}
:is(url({)), .pop-view[direction=top], :is(url(})) {
  margin-bottom: 6px;
}
:is(url({)), .pop-view[direction=top] .pop-view-arrow, :is(url(})) {
  bottom: -9px;
}
:is(url({)), .pop-view[direction=bottom], :is(url(})) {
  margin-top: 6px;
}
:is(url({)), .pop-view[direction=bottom] .pop-view-arrow, :is(url(})) {
  top: -9px;
}
:is(url({)), .pop-view[direction=left], :is(url(})) {
  margin-right: 9px;
}
:is(url({)), .pop-view[direction=left] .pop-view-arrow, :is(url(})) {
  top: -9px;
}
:is(url({)), .pop-view[direction=right], :is(url(})) {
  margin-left: 9px;
}
:is(url({)), .pop-view[direction=right] .pop-view-arrow, :is(url(})) {
  left: -9px;
  transform: rotateZ(-90deg);
}

:is(url({)), .pop-window-view, :is(url(})) {
  border-radius: 0;
  border: var(--main-border);
  border-image: var(--main-rounded-border);
}
:is(url({)), .pop-window-header, :is(url(})) {
  border-bottom: var(--main-border);
}
:is(url({)), .pop-window-content, :is(url(})) {
  margin-left: -2px;
  margin-right: -2px;
}
:is(url({)), .divplurk .avatar, .divresponse .avatar, :is(url(})) {
  line-height: 0;
  height: auto !important;
  width: auto !important;
  border: var(--main-border);
  clip-path: var(--round-rect-2px);
}
:is(url({)), .divplurk .avatar img, .divresponse .avatar img, :is(url(})) {
  border-radius: 0 !important;
  image-rendering: pixelated;
}
:is(url({)), .divresponse .avatar img, :is(url(})) {
  width: 30px !important;
  height: 30px !important;
}

:is(url({)),
  input[type="button"],
  input[type="submit"],
  button,
  .button,
  .orange-but,
:is(url(})) {
  border-radius: 0;
  border: var(--main-border);
  box-shadow: inset -2px -2px rgba(0, 0, 0, 0.2) !important;
  clip-path: var(--round-rect-2px);
  padding: 7px 11px;
}

:is(url({)),
  input[type="button"].small-button,
  input[type="submit"].small-button,
  button.small-button,
  .button.small-button,
  .orange-but.small-button,
:is(url(})) {
  padding: 4px 8px;
}

:is(url({)),
  input[type="button"]:hover,
  input[type="submit"]:hover,
  button:hover,
  .button:hover,
  .orange-but:hover,
:is(url(})) {
  box-shadow: inset -3px -3px rgba(0, 0, 0, 0.2) !important;
}


:is(url({)), html, :is(url(})) {
  --main-border-color: black;
  --main-border-width: 2px;
  --neg-main-border-width: calc(-1 * var(--main-border-width));
  --main-border: var(--main-border-width) solid var(--main-border-color);
  --main-border-box-shadow:
  var(--main-border-width) 0 var(--main-border-color),
  0 var(--main-border-width) var(--main-border-color),
  var(--neg-main-border-width) 0 var(--main-border-color),
  0 var(--neg-main-border-width) var(--main-border-color);
  /* from: https://nostalgic-css.github.io/NES.css/ */
  --main-rounded-border: url('data:image/svg+xml;utf8,<?xml version="1.0" encoding="UTF-8" ?><svg version="1.1" width="8" height="8" xmlns="http://www.w3.org/2000/svg"><path d="M3 1 h1 v1 h-1 z M4 1 h1 v1 h-1 z M2 2 h1 v1 h-1 z M5 2 h1 v1 h-1 z M1 3 h1 v1 h-1 z M6 3 h1 v1 h-1 z M1 4 h1 v1 h-1 z M6 4 h1 v1 h-1 z M2 5 h1 v1 h-1 z M5 5 h1 v1 h-1 z M3 6 h1 v1 h-1 z M4 6 h1 v1 h-1 z" fill="black" /></svg>') 3 / 3 / 2;
  --main-rounded-border-2px: url('data:image/svg+xml;utf8,<?xml version="1.0" encoding="UTF-8" ?><svg version="1.1" width="5" height="5" xmlns="http://www.w3.org/2000/svg"><path d="M2 1 h1 v1 h-1 z M1 2 h1 v1 h-1 z M3 2 h1 v1 h-1 z M2 3 h1 v1 h-1 z" fill="black" /></svg>') 2 / 2 / 1;
  --pixelate-filter-4px: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg"><filter id="pixelate" x="0" y="0" width="100%" height="100%"><feColorMatrix width="1" height="1" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1"/><feOffset dx="1.5" dy="1.5" width="4" height="4"/><feTile/><feComposite in="SourceGraphic" operator="in"/><feMorphology operator="dilate" radius="2"/></filter></svg>#pixelate');
  --pixelate-filter-2px: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg"><filter id="pixelate" x="0" y="0" width="100%" height="100%"><feColorMatrix width="1" height="1" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1"/><feOffset dx=".5" dy=".5" width="2" height="2"/><feTile/><feComposite in="SourceGraphic" operator="in"/><feMorphology operator="dilate" radius=".5"/></filter></svg>#pixelate');
  --round-rect-2px: polygon(
  0 2px, 2px 2px, 2px 0,
  calc(100% - 2px) 0, calc(100% - 2px) 2px, 100% 2px,
  100% calc(100% - 2px), calc(100% - 2px) calc(100% - 2px), calc(100% - 2px) 100%,
  2px 100%, 2px calc(100% - 2px), 0 calc(100% - 2px));
  --round-rect-4px: polygon(
  0 4px, 2px 4px, 2px 2px, 4px 2px, 4px 0,
  calc(100% - 4px) 0, calc(100% - 4px) 2px, calc(100% - 2px) 2px,  calc(100% - 2px) 4px, 100% 4px,
  100% calc(100% - 4px), calc(100% - 2px) calc(100% - 4px), calc(100% - 2px) calc(100% - 2px),  calc(100% - 4px) calc(100% - 2px), calc(100% - 4px) 100%,
  4px 100%, 4px calc(100% - 2px), 2px calc(100% - 2px), 2px calc(100% - 4px), 0 calc(100% - 4px));
}
